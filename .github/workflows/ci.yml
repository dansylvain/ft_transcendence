# name: CI

# on:
#   push:
#     branches: [ "**" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'
          
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install black flake8

#       - name: Run Black
#         run: black . --check

#       - name: Run Flake8
#         run: flake8 .

#   tests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Dummy test
#         run: echo "Tests passed"

#   deploy:
#     needs: [lint, tests]
#     if: github.ref == 'refs/heads/master'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to Raspberry Pi
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.RASPBERRY_HOST }}
#           port: ${{ secrets.RASPBERRY_PORT }}
#           username: ${{ secrets.RASPBERRY_USER }}
#           key: ${{ secrets.RASPBERRY_SSH_KEY }}  # Ajoutez cette ligne
#           debug: true  # Pour avoir plus de détails sur l'erreur
#           script: |
#             cd workspace/ft_transcendence/
#             echo "Pulling latest changes..."
#             git pull origin master
#             echo "Stopping containers..."
#             docker-compose down
#             echo "Starting containers..."
#             docker-compose up -d
#             echo "Deployment complete!"


#######################

name: CI/CD

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - prod

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      - name: Run Black
        run: black . --check

      - name: Run Flake8
        run: flake8 .

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest playwright
          playwright install
      
      # Démarrer le serveur avec 'make re'
      - name: Start the server
        run: |
          echo "Starting the server..."
          make re > /dev/null 2>&1 &  # Lance le serveur en arrière-plan
          sleep 5  # Donne un peu de temps pour démarrer le serveur

      # Attente que le container Docker soit prêt (ctn_nginx)
      - name: Wait for Docker container to be ready
        run: |
          echo "Waiting for Docker containers to be ready..."
          # Attendre que Docker indique que le container ctn_nginx est en cours d'exécution
          until docker-compose ps | grep -q "ctn_nginx.*Up"; do
            echo "Waiting for container ctn_nginx..."
            sleep 2 
          done
          echo "Docker container is up and running!"
          
          
      - name: Run Playwright tests
        run: pytest

  merge-to-prod:
    needs: [lint, tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Merge dev into prod
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      
      - name: Merge branches
        run: |
          git checkout prod
          git merge dev --no-ff -m "Auto-merge dev into prod"
          git push origin prod

  deploy:
    needs: [merge-to-prod]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RASPBERRY_HOST }}
          port: ${{ secrets.RASPBERRY_PORT }}
          username: ${{ secrets.RASPBERRY_USER }}
          key: ${{ secrets.RASPBERRY_SSH_KEY }}
          debug: true
          script: |
            cd workspace/ft_transcendence/
            echo "Pulling latest changes..."
            git pull origin prod
            echo "Stopping containers..."
            docker-compose down
            echo "Starting containers..."
            docker-compose up -d
            echo "Deployment complete!"
